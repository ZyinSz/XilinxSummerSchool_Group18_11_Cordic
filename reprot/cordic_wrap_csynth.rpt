

================================================================
== Vitis HLS Report for 'cordic_wrap'
================================================================
* Date:           Thu Aug 11 00:43:23 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:48:09 MDT 2021)
* Project:        cordic_hls_prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+-----------+------------+
    |  Clock |  Target  | Estimated | Uncertainty|
    +--------+----------+-----------+------------+
    |ap_clk  |  10.00 ns|  14.600 ns|     2.70 ns|
    +--------+----------+-----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |        ?|        ?|         ?|         ?|    ?|    ?|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        +-------------------+--------+---------+---------+----------+----------+-----+-----+---------+
        |                   |        |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
        |      Instance     | Module |   min   |   max   |    min   |    max   | min | max |   Type  |
        +-------------------+--------+---------+---------+----------+----------+-----+-----+---------+
        |grp_cordic_fu_120  |cordic  |       26|       26|  0.380 us|  0.380 us|    3|    3|      yes|
        +-------------------+--------+---------+---------+----------+----------+-----+-----+---------+

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_100_1  |        ?|        ?|        35|         34|          1|     ?|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-----+--------+-------+-----+
|       Name      | BRAM_18K| DSP |   FF   |  LUT  | URAM|
+-----------------+---------+-----+--------+-------+-----+
|DSP              |        -|    -|       -|      -|    -|
|Expression       |        -|    -|       0|    254|    -|
|FIFO             |        -|    -|       -|      -|    -|
|Instance         |        4|    -|    2443|   5278|    -|
|Memory           |        -|    -|       -|      -|    -|
|Multiplexer      |        -|    -|       -|    254|    -|
|Register         |        -|    -|     439|      -|    -|
+-----------------+---------+-----+--------+-------+-----+
|Total            |        4|    0|    2882|   5786|    0|
+-----------------+---------+-----+--------+-------+-----+
|Available        |      280|  220|  106400|  53200|    0|
+-----------------+---------+-----+--------+-------+-----+
|Utilization (%)  |        1|    0|       2|     10|    0|
+-----------------+---------+-----+--------+-------+-----+

+ Detail: 
    * Instance: 
    +-------------------+---------------+---------+----+------+------+-----+
    |      Instance     |     Module    | BRAM_18K| DSP|  FF  |  LUT | URAM|
    +-------------------+---------------+---------+----+------+------+-----+
    |CTRL_s_axi_U       |CTRL_s_axi     |        0|   0|    57|    58|    0|
    |control_s_axi_U    |control_s_axi  |        0|   0|   240|   424|    0|
    |grp_cordic_fu_120  |cordic         |        0|   0|  1634|  4216|    0|
    |gmem_m_axi_U       |gmem_m_axi     |        4|   0|   512|   580|    0|
    +-------------------+---------------+---------+----+------+------+-----+
    |Total              |               |        4|   0|  2443|  5278|    0|
    +-------------------+---------------+---------+----+------+------+-----+

    * DSP: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +-----------------------------------+----------+----+---+----+------------+------------+
    |           Variable Name           | Operation| DSP| FF| LUT| Bitwidth P0| Bitwidth P1|
    +-----------------------------------+----------+----+---+----+------------+------------+
    |add_ln103_1_fu_193_p2              |         +|   0|  0|  71|          64|          64|
    |add_ln103_2_fu_198_p2              |         +|   0|  0|  71|          64|          64|
    |add_ln103_fu_166_p2                |         +|   0|  0|  70|          63|          63|
    |i_V_2_fu_156_p2                    |         +|   0|  0|  15|           8|           1|
    |ap_block_pp0_stage0_11001          |       and|   0|  0|   2|           1|           1|
    |ap_block_pp0_stage1_11001          |       and|   0|  0|   2|           1|           1|
    |ap_block_pp0_stage26_11001         |       and|   0|  0|   2|           1|           1|
    |ap_block_pp0_stage8_11001          |       and|   0|  0|   2|           1|           1|
    |ap_block_state10_pp0_stage8_iter0  |       and|   0|  0|   2|           1|           1|
    |ap_block_state11_pp0_stage9_iter0  |       and|   0|  0|   2|           1|           1|
    |ap_block_state3_io                 |       and|   0|  0|   2|           1|           1|
    |icmp_ln100_fu_151_p2               |      icmp|   0|  0|  11|           8|           8|
    |ap_enable_pp0                      |       xor|   0|  0|   2|           1|           2|
    +-----------------------------------+----------+----+---+----+------------+------------+
    |Total                              |          |   0|  0| 254|         215|         209|
    +-----------------------------------+----------+----+---+----+------------+------------+

    * Multiplexer: 
    +-------------------------+-----+-----------+-----+-----------+
    |           Name          | LUT | Input Size| Bits| Total Bits|
    +-------------------------+-----+-----------+-----+-----------+
    |ap_NS_fsm                |  164|         37|    1|         37|
    |ap_enable_reg_pp0_iter1  |    9|          2|    1|          2|
    |gmem_AWVALID             |    9|          2|    1|          2|
    |gmem_BREADY              |    9|          2|    1|          2|
    |gmem_WVALID              |    9|          2|    1|          2|
    |gmem_blk_n_AR            |    9|          2|    1|          2|
    |gmem_blk_n_AW            |    9|          2|    1|          2|
    |gmem_blk_n_B             |    9|          2|    1|          2|
    |gmem_blk_n_R             |    9|          2|    1|          2|
    |gmem_blk_n_W             |    9|          2|    1|          2|
    |i_V_fu_80                |    9|          2|    8|         16|
    +-------------------------+-----+-----------+-----+-----------+
    |Total                    |  254|         57|   18|         71|
    +-------------------------+-----+-----------+-----+-----------+

    * Register: 
    +--------------------------------+----+----+-----+-----------+
    |              Name              | FF | LUT| Bits| Const Bits|
    +--------------------------------+----+----+-----+-----------+
    |add_ln103_1_reg_250             |  64|   0|   64|          0|
    |add_ln103_2_reg_255             |  64|   0|   64|          0|
    |ap_CS_fsm                       |  36|   0|   36|          0|
    |ap_enable_reg_pp0_iter0         |   1|   0|    1|          0|
    |ap_enable_reg_pp0_iter1         |   1|   0|    1|          0|
    |gmem_addr_reg_244               |  64|   0|   64|          0|
    |grp_cordic_fu_120_ap_start_reg  |   1|   0|    1|          0|
    |i_V_fu_80                       |   8|   0|    8|          0|
    |icmp_ln100_reg_240              |   1|   0|    1|          0|
    |len_read_reg_230                |   8|   0|    8|          0|
    |result_c_read_reg_220           |  64|   0|   64|          0|
    |result_s_read_reg_225           |  64|   0|   64|          0|
    |sext_ln100_reg_235              |  63|   0|   63|          0|
    +--------------------------------+----+----+-----+-----------+
    |Total                           | 439|   0|  439|          0|
    +--------------------------------+----+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+-----------------------+-----+-----+------------+--------------+--------------+
|       RTL Ports       | Dir | Bits|  Protocol  | Source Object|    C Type    |
+-----------------------+-----+-----+------------+--------------+--------------+
|s_axi_CTRL_AWVALID     |   in|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_AWREADY     |  out|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_AWADDR      |   in|    5|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_WVALID      |   in|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_WREADY      |  out|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_WDATA       |   in|   32|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_WSTRB       |   in|    4|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_ARVALID     |   in|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_ARREADY     |  out|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_ARADDR      |   in|    5|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_RVALID      |  out|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_RREADY      |   in|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_RDATA       |  out|   32|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_RRESP       |  out|    2|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_BVALID      |  out|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_BREADY      |   in|    1|       s_axi|          CTRL|        scalar|
|s_axi_CTRL_BRESP       |  out|    2|       s_axi|          CTRL|        scalar|
|s_axi_control_AWVALID  |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_AWREADY  |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_AWADDR   |   in|    6|       s_axi|       control|        scalar|
|s_axi_control_WVALID   |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_WREADY   |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_WDATA    |   in|   32|       s_axi|       control|        scalar|
|s_axi_control_WSTRB    |   in|    4|       s_axi|       control|        scalar|
|s_axi_control_ARVALID  |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_ARREADY  |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_ARADDR   |   in|    6|       s_axi|       control|        scalar|
|s_axi_control_RVALID   |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_RREADY   |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_RDATA    |  out|   32|       s_axi|       control|        scalar|
|s_axi_control_RRESP    |  out|    2|       s_axi|       control|        scalar|
|s_axi_control_BVALID   |  out|    1|       s_axi|       control|        scalar|
|s_axi_control_BREADY   |   in|    1|       s_axi|       control|        scalar|
|s_axi_control_BRESP    |  out|    2|       s_axi|       control|        scalar|
|ap_local_block         |  out|    1|  ap_ctrl_hs|   cordic_wrap|  return value|
|ap_clk                 |   in|    1|  ap_ctrl_hs|   cordic_wrap|  return value|
|ap_rst_n               |   in|    1|  ap_ctrl_hs|   cordic_wrap|  return value|
|interrupt              |  out|    1|  ap_ctrl_hs|   cordic_wrap|  return value|
|m_axi_gmem_AWVALID     |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWREADY     |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWADDR      |  out|   64|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWID        |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWLEN       |  out|    8|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWSIZE      |  out|    3|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWBURST     |  out|    2|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWLOCK      |  out|    2|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWCACHE     |  out|    4|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWPROT      |  out|    3|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWQOS       |  out|    4|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWREGION    |  out|    4|       m_axi|          gmem|       pointer|
|m_axi_gmem_AWUSER      |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_WVALID      |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_WREADY      |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_WDATA       |  out|   32|       m_axi|          gmem|       pointer|
|m_axi_gmem_WSTRB       |  out|    4|       m_axi|          gmem|       pointer|
|m_axi_gmem_WLAST       |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_WID         |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_WUSER       |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARVALID     |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARREADY     |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARADDR      |  out|   64|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARID        |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARLEN       |  out|    8|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARSIZE      |  out|    3|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARBURST     |  out|    2|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARLOCK      |  out|    2|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARCACHE     |  out|    4|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARPROT      |  out|    3|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARQOS       |  out|    4|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARREGION    |  out|    4|       m_axi|          gmem|       pointer|
|m_axi_gmem_ARUSER      |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_RVALID      |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_RREADY      |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_RDATA       |   in|   32|       m_axi|          gmem|       pointer|
|m_axi_gmem_RLAST       |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_RID         |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_RUSER       |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_RRESP       |   in|    2|       m_axi|          gmem|       pointer|
|m_axi_gmem_BVALID      |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_BREADY      |  out|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_BRESP       |   in|    2|       m_axi|          gmem|       pointer|
|m_axi_gmem_BID         |   in|    1|       m_axi|          gmem|       pointer|
|m_axi_gmem_BUSER       |   in|    1|       m_axi|          gmem|       pointer|
+-----------------------+-----+-----+------------+--------------+--------------+

